version: '3'

services:
  nginx:
    image: nginx:latest
    container_name: production_nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
      - 443:443
    depends_on:
      - serverhttp
  db:
    image: postgres:10.6
    restart: always
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
  redis:
    image: redis
    ports:
      - 6379:6379
  serverhttp:
    build: .
    restart: always
    command: ["gunicorn", "--access-logfile", "-", "--workers", "3","-b", "0.0.0.0:8000",  "settings.wsgi:application"]
    env_file:
      - .env
    environment:
      - DEBUG=True
      - DB_HOST=db
      - REDIS_HOST=redis
      - MODELCHIMP_PATH=/code
      - DOMAIN=127.0.0.1:3000
      - ALLOWED_HOSTS=*
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
  server-websocket:
    build: .
    restart: always
    command: ["daphne", "-b", "0.0.0.0", "-p", "8001", "settings.asgi:application"]
    env_file:
      - .env
    environment:
      - DEBUG=True
      - DB_HOST=db
      - REDIS_HOST=redis
      - MODELCHIMP_PATH=/code
      - DOMAIN=127.0.0.1:3000
      - VIRTUAL_HOST=foo.bar.com
      - ALLOWED_HOSTS=*
    volumes:
      - .:/code
    ports:
      - "8001:8001"
    depends_on:
      - db
      - redis
  celery:
    build: .
    command: bash ./scripts/wait-for-postgres.sh db celery -A settings worker -l info -B
    environment:
      - REDIS_HOST=redis
      - DB_HOST=db
    volumes:
      - .:/code
    depends_on:
      - db
      - redis
